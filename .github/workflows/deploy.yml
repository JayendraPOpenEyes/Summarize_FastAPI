name: Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: my-app
  IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gcptest/gcptest:latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Decode and Save Firebase Credentials
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > /tmp/firebase.json.b64
          base64 -d /tmp/firebase.json.b64 > /tmp/firebase.json
          cp /tmp/firebase.json ./firebase-adminsdk.json

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE_NAME }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.IMAGE_NAME }} \
            --platform=managed \
            --region=${{ env.REGION }} \
            --allow-unauthenticated \
            --service-account=firebase-adminsdk-h65me@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --timeout=800s \
            --set-env-vars="FIREBASE_CREDENTIALS=${{ secrets.FIREBASE_CREDENTIALS }}" \
            --set-env-vars="GOOGLE_CLOUD_PROJECT=${{ env.PROJECT_ID }}" \
            --set-env-vars="GCLOUD_PROJECT=${{ env.PROJECT_ID }}" \
            --clear-secrets

      - name: Verify Deployment
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format="value(status.url)"